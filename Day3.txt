1) Max Product Subarray - medium 
class Solution {
    public int maxProduct(int[] nums) {
        int max = nums[0], min = nums[0], ans = nums[0];
        
        for (int i = 1; i < nums.length; i++) {
            int temp = max; 
            max = Math.max(Math.max(max * nums[i], min * nums[i]), nums[i]);
            min = Math.min(Math.min(temp * nums[i], min * nums[i]), nums[i]);
            
            if (max > ans) {
                ans = max;
            }
        }
        return ans;
    }
}

2) Permutations - medium 
class Solution {
    public static void generatePermutations(int[] nums, boolean[] used, List<Integer> current, List<List<Integer>> result) {
        if (current.size() == nums.length) {
            result.add(new ArrayList<>(current));
            return;
        }

        for (int i = 0; i < nums.length; i++) {
            if (!used[i]) {
                current.add(nums[i]);
                used[i] = true;
                generatePermutations(nums, used, current, result);
                used[i] = false;
                current.remove(current.size() - 1);
            }
        }
    }

    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> current = new ArrayList<>();
        boolean[] used = new boolean[nums.length];
        generatePermutations(nums, used, current, result);
        return result;
    }
}


3) Robot Return to Origin - easy
class Solution {
    public boolean judgeCircle(String moves) {
        int vertCt = 0;
        int horCt = 0;
        for(int i=0;i<moves.length();i++){
            char c = moves.charAt(i);
            if(c=='U'){
                vertCt++;
            }else if(c=='D'){
                vertCt--;
            }else if(c=='R'){
                horCt++;
            }else{
                horCt--;
            }
        }

        if(horCt==0 && vertCt==0){
            return true;
        }
        return false;
    }
}

4)String to Lower Case - easy
class Solution {
    public String toLowerCase(String s) {
        return s.toLowerCase();
    }
}

5) 