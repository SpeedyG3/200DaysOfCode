1) Max Number of Balloons - easy
class Solution {
    public int maxNumberOfBalloons(String text) {
        int b=0,a=0,l=0,o=0,n=0;
        for(int i=0;i<text.length();i++){
            char ch = text.charAt(i);
            if(ch=='b'){
                b++;
            }else if(ch=='o'){
                o++;
            }else if(ch=='a'){
                a++;
            }else if(ch=='l'){
                l++;
            }else if(ch=='n'){
                n++;
            }
        }
        int arr[] = new int[5];
        arr[0] = b; arr[1] = a; arr[2] = l; arr[3] = o; arr[4] = n;
        int ans=0;
        boolean chk = true;
        while(chk){
            arr[0]-=1;
            arr[1]-=1;
            arr[2]-=2;
            arr[3]-=2;
            arr[4]-=1;
            if(arr[0]>=0 && arr[1]>=0 && arr[2]>=0 && arr[3]>=0 && arr[4]>=0){
                ans++;
            }else{
                chk=false;
            }
        }
        return ans;
    }
}

2) How Many Numbers Are Smaller Than the Current Number - easy
class Solution {
    public int[] smallerNumbersThanCurrent(int[] nums) {
        int res[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            int num = nums[i];
            int ct = 0;
            for(int j=0;j<nums.length;j++){
                if(nums[j]<num){
                    ct++;
                }
            }
            res[i] = ct;
        }
        return res;
    }
}

3) Lucky Number in a matrix - easy
class Solution {
    public static boolean isLucky(int mt[][], int i, int j, int r, int c){
        int min_inRow = Integer.MAX_VALUE;
        int max_inCol = Integer.MIN_VALUE;
        for(int x=0;x<c;x++){
            min_inRow = Math.min(min_inRow, mt[i][x]);
        }
        for(int y=0;y<r;y++){
            max_inCol = Math.max(max_inCol, mt[y][j]);
        }

        if(mt[i][j]==max_inCol && mt[i][j]==min_inRow){
            return true;
        }
        return false;        
    }

    public List<Integer> luckyNumbers (int[][] matrix) {
        ArrayList<Integer> ans = new ArrayList<>();
        int r = matrix.length;
        int c = matrix[0].length;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(isLucky(matrix,i,j,r,c)){
                    ans.add(matrix[i][j]);
                }
            }
        }
        return ans;
    }
}

4) Find the Distance Value Between Two Arrays - easy 
class Solution {
    public int findTheDistanceValue(int[] arr1, int[] arr2, int d) {
        int dist_false = 0;
        for(int i=0;i<arr1.length;i++){
            boolean chk = true;
            for(int j=0;j<arr2.length;j++){
                if(Math.abs(arr1[i]-arr2[j])<=d){
                    dist_false++;
                    break;
                }
            }
        }
        return arr1.length - dist_false;
    }
}