1) Unique Binary Search Trees - medium
class Solution {
    public int numTrees(int n) {
        int dp[] = new int[n+1];
        dp[0] = 1; //null 
        dp[1] = 1; //1 node -> 1 tree
        for(int i=2;i<=n;i++){
            for(int j=0;j<i;j++){
                dp[i] += dp[j]*dp[i-j-1];
                //can also do like 
                //left arragements
                // int left = dp[j];
                // //right arrangements
                // int right = dp[i-j-1];
                // dp[i]+=left*right;
            }
        }
        return dp[n];
    }
}

2) Valid Mountain Array - easy 
class Solution {
    public boolean validMountainArray(int[] arr) {
        if(arr.length<3){
            return false;
        }
        int idx=-1;
        for(int i=1;i<arr.length;i++){
            int prev = arr[i-1];
            int curr = arr[i];
            if(curr==prev){
                return false;
            }if(prev>curr){
                idx = i-1; //index of prev
                break;
            }//prev<curr we continue the loop 
        }
        if(idx==0 || idx==-1){
            return false;
        }
        for(int i=idx+1;i<arr.length;i++){
            int prev = arr[i-1];
            int curr = arr[i];
            if(prev<=curr){
                return false;
            }
        }
        return true;
    }
}